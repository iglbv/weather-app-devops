{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddgol\\\\Desktop\\\\weather-app-devops\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport CityList from './components/CityList';\nimport CityForm from './components/CityForm';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OPENWEATHER_API_KEY = 'd5b9892542a831a20e5cde81df11674e';\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [cities, setCities] = useState([]);\n  const [currentCity, setCurrentCity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  const fetchCities = async () => {\n    try {\n      const response = await axios.get('/api/cities');\n      setCities(response.data);\n    } catch (err) {\n      setError('Failed to fetch cities');\n      console.error(err);\n    }\n  };\n  const fetchWeather = async city => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${OPENWEATHER_API_KEY}&units=metric&lang=ru`);\n      setWeather(response.data);\n      setCurrentCity(city);\n    } catch (err) {\n      setError('City not found');\n      setWeather(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addCity = async city => {\n    try {\n      const response = await axios.post('/api/cities', {\n        name: city\n      });\n      setCities([...cities, response.data]);\n      fetchWeather(city);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) === 'City already exists') {\n        setError('This city is already in your list');\n        fetchWeather(city);\n      } else {\n        setError('Failed to add city');\n      }\n    }\n  };\n  const updateCity = async (id, oldName, newName) => {\n    try {\n      await axios.put(`/api/cities/${id}`, {\n        name: newName\n      });\n      const updatedCities = cities.map(city => city.id === id ? {\n        ...city,\n        name: newName\n      } : city);\n      setCities(updatedCities);\n      if (currentCity === oldName) {\n        fetchWeather(newName);\n      }\n    } catch (err) {\n      setError('Failed to update city');\n    }\n  };\n  const deleteCity = async (id, cityName) => {\n    try {\n      await axios.delete(`/api/cities/${id}`);\n      const updatedCities = cities.filter(city => city.id !== id);\n      setCities(updatedCities);\n      if (currentCity === cityName) {\n        setWeather(null);\n        setCurrentCity('');\n      }\n    } catch (err) {\n      setError('Failed to delete city');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityForm, {\n      onAddCity: addCity,\n      onFetchWeather: fetchWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityList, {\n      cities: cities,\n      currentCity: currentCity,\n      onSelectCity: city => fetchWeather(city.name),\n      onUpdateCity: updateCity,\n      onDeleteCity: deleteCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5WWs9S9nAUn2oRlkKGAt+AI4dPw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherDisplay","CityList","CityForm","jsxDEV","_jsxDEV","OPENWEATHER_API_KEY","App","_s","weather","setWeather","cities","setCities","currentCity","setCurrentCity","loading","setLoading","error","setError","fetchCities","response","get","data","err","console","fetchWeather","city","addCity","post","name","_err$response","_err$response$data","updateCity","id","oldName","newName","put","updatedCities","map","deleteCity","cityName","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddCity","onFetchWeather","onSelectCity","onUpdateCity","onDeleteCity","_c","$RefreshReg$"],"sources":["C:/Users/ddgol/Desktop/weather-app-devops/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport WeatherDisplay from './components/WeatherDisplay';\r\nimport CityList from './components/CityList';\r\nimport CityForm from './components/CityForm';\r\nimport './styles.css';\r\n\r\nconst OPENWEATHER_API_KEY = 'd5b9892542a831a20e5cde81df11674e';\r\n\r\nfunction App() {\r\n  const [weather, setWeather] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [currentCity, setCurrentCity] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const fetchCities = async () => {\r\n    try {\r\n      const response = await axios.get('/api/cities');\r\n      setCities(response.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch cities');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchWeather = async (city) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${OPENWEATHER_API_KEY}&units=metric&lang=ru`\r\n      );\r\n      setWeather(response.data);\r\n      setCurrentCity(city);\r\n    } catch (err) {\r\n      setError('City not found');\r\n      setWeather(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addCity = async (city) => {\r\n    try {\r\n      const response = await axios.post('/api/cities', { name: city });\r\n      setCities([...cities, response.data]);\r\n      fetchWeather(city);\r\n    } catch (err) {\r\n      if (err.response?.data?.error === 'City already exists') {\r\n        setError('This city is already in your list');\r\n        fetchWeather(city);\r\n      } else {\r\n        setError('Failed to add city');\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateCity = async (id, oldName, newName) => {\r\n    try {\r\n      await axios.put(`/api/cities/${id}`, { name: newName });\r\n      const updatedCities = cities.map(city =>\r\n        city.id === id ? { ...city, name: newName } : city\r\n      );\r\n      setCities(updatedCities);\r\n      if (currentCity === oldName) {\r\n        fetchWeather(newName);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to update city');\r\n    }\r\n  };\r\n\r\n  const deleteCity = async (id, cityName) => {\r\n    try {\r\n      await axios.delete(`/api/cities/${id}`);\r\n      const updatedCities = cities.filter(city => city.id !== id);\r\n      setCities(updatedCities);\r\n      if (currentCity === cityName) {\r\n        setWeather(null);\r\n        setCurrentCity('');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to delete city');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Weather App</h1>\r\n\r\n      <CityForm\r\n        onAddCity={addCity}\r\n        onFetchWeather={fetchWeather}\r\n      />\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <WeatherDisplay weather={weather} />\r\n\r\n      <CityList\r\n        cities={cities}\r\n        currentCity={currentCity}\r\n        onSelectCity={(city) => fetchWeather(city.name)}\r\n        onUpdateCity={updateCity}\r\n        onDeleteCity={deleteCity}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}