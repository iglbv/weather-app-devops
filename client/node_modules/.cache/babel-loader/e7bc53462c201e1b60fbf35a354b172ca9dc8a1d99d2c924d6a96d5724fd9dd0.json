{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import WeatherDisplay from'./components/WeatherDisplay';import CityList from'./components/CityList';import CityForm from'./components/CityForm';import'./styles.css';// Определяем базовый URL API в зависимости от среды\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.NODE_ENV==='production'?'https://bbap3a8r09uu19vmt3ll.containers.yandexcloud.net/api'// Замените на реальный домен вашего сервера\n:'http://localhost:5000/api';function App(){const[weather,setWeather]=useState(null);const[cities,setCities]=useState([]);const[currentCity,setCurrentCity]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');useEffect(()=>{fetchCities();},[]);const fetchCities=async()=>{try{const response=await axios.get(`${API_BASE_URL}/cities`);setCities(response.data);}catch(err){setError('Failed to fetch cities');console.error(err);}};const fetchWeather=async city=>{setLoading(true);setError('');try{const response=await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHER_API_KEY}&units=metric&lang=ru`);setWeather(response.data);setCurrentCity(city);}catch(err){setError('City not found');setWeather(null);}finally{setLoading(false);}};const addCity=async city=>{try{const response=await axios.post(`${API_BASE_URL}/cities`,{name:city});setCities([...cities,response.data]);fetchWeather(city);}catch(err){var _err$response,_err$response$data;if(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)==='City already exists'){setError('This city is already in your list');fetchWeather(city);}else{setError('Failed to add city');}}};const updateCity=async(id,oldName,newName)=>{try{await axios.put(`${API_BASE_URL}/cities/${id}`,{name:newName});const updatedCities=cities.map(city=>city.id===id?{...city,name:newName}:city);setCities(updatedCities);if(currentCity===oldName){fetchWeather(newName);}}catch(err){setError('Failed to update city');}};const deleteCity=async(id,cityName)=>{try{await axios.delete(`${API_BASE_URL}/cities/${id}`);const updatedCities=cities.filter(city=>city.id!==id);setCities(updatedCities);if(currentCity===cityName){setWeather(null);setCurrentCity('');}}catch(err){setError('Failed to delete city');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Weather App\"}),/*#__PURE__*/_jsx(CityForm,{onAddCity:addCity,onFetchWeather:fetchWeather}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(WeatherDisplay,{weather:weather}),/*#__PURE__*/_jsx(CityList,{cities:cities,currentCity:currentCity,onSelectCity:city=>fetchWeather(city.name),onUpdateCity:updateCity,onDeleteCity:deleteCity})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","WeatherDisplay","CityList","CityForm","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","NODE_ENV","App","weather","setWeather","cities","setCities","currentCity","setCurrentCity","loading","setLoading","error","setError","fetchCities","response","get","data","err","console","fetchWeather","city","REACT_APP_OPENWEATHER_API_KEY","addCity","post","name","_err$response","_err$response$data","updateCity","id","oldName","newName","put","updatedCities","map","deleteCity","cityName","delete","filter","className","children","onAddCity","onFetchWeather","onSelectCity","onUpdateCity","onDeleteCity"],"sources":["C:/Users/ddgol/Desktop/weather-app-devops/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport WeatherDisplay from './components/WeatherDisplay';\r\nimport CityList from './components/CityList';\r\nimport CityForm from './components/CityForm';\r\nimport './styles.css';\r\n\r\n// Определяем базовый URL API в зависимости от среды\r\nconst API_BASE_URL = process.env.NODE_ENV === 'production'\r\n  ? 'https://bbap3a8r09uu19vmt3ll.containers.yandexcloud.net/api'  // Замените на реальный домен вашего сервера\r\n  : 'http://localhost:5000/api';\r\n\r\nfunction App() {\r\n  const [weather, setWeather] = useState(null);\r\n  const [cities, setCities] = useState([]);\r\n  const [currentCity, setCurrentCity] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const fetchCities = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/cities`);\r\n      setCities(response.data);\r\n    } catch (err) {\r\n      setError('Failed to fetch cities');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchWeather = async (city) => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHER_API_KEY}&units=metric&lang=ru`\r\n      );\r\n      setWeather(response.data);\r\n      setCurrentCity(city);\r\n    } catch (err) {\r\n      setError('City not found');\r\n      setWeather(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addCity = async (city) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/cities`, { name: city });\r\n      setCities([...cities, response.data]);\r\n      fetchWeather(city);\r\n    } catch (err) {\r\n      if (err.response?.data?.error === 'City already exists') {\r\n        setError('This city is already in your list');\r\n        fetchWeather(city);\r\n      } else {\r\n        setError('Failed to add city');\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateCity = async (id, oldName, newName) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/cities/${id}`, { name: newName });\r\n      const updatedCities = cities.map(city =>\r\n        city.id === id ? { ...city, name: newName } : city\r\n      );\r\n      setCities(updatedCities);\r\n      if (currentCity === oldName) {\r\n        fetchWeather(newName);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to update city');\r\n    }\r\n  };\r\n\r\n  const deleteCity = async (id, cityName) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/cities/${id}`);\r\n      const updatedCities = cities.filter(city => city.id !== id);\r\n      setCities(updatedCities);\r\n      if (currentCity === cityName) {\r\n        setWeather(null);\r\n        setCurrentCity('');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to delete city');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Weather App</h1>\r\n\r\n      <CityForm\r\n        onAddCity={addCity}\r\n        onFetchWeather={fetchWeather}\r\n      />\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <WeatherDisplay weather={weather} />\r\n\r\n      <CityList\r\n        cities={cities}\r\n        currentCity={currentCity}\r\n        onSelectCity={(city) => fetchWeather(city.name)}\r\n        onUpdateCity={updateCity}\r\n        onDeleteCity={deleteCity}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}